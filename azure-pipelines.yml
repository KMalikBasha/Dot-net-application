parameters:
  - name: Environments
    type: string
    default: refs/heads/DEV
    values:
      - refs/heads/Dev
      - refs/heads/Qa
      - refs/heads/Prod
trigger:
- none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    displayName: 'Build Job'
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Restore NuGet packages'
      inputs:
        command: 'restore'
        projects: '$(solution)'
        feedsToUse: 'select'
        vstsFeed: 'MyNuGetFeed'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project'
      inputs:
        command: 'build'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project'
      inputs:
        command: 'publish'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish build artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'

- stage: Deploy
  displayName: 'Deploy Stage'
  jobs:
  - job: DeployJob
    displayName: 'Deploy Job'
    steps:
    - task: DownloadBuildArtifacts@0
      displayName: 'Download build artifacts'
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(Build.ArtifactStagingDirectory)'

- stage: DeployDev
  dependsOn: Build
  displayName: Deploy Dev
  jobs:
  - job: 
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'New-resource-connection'
        appType: 'webApp'
        WebAppName: 'dev-enveronment'
        packageForLinux: '$(Build.ArtifactStagingDirectory)/*.zip'

- stage: DeployQa
  dependsOn: Build
  displayName: Deploy Qa
  jobs:
  - job: 
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'New-resource-connection'
        appType: 'webApp'
        WebAppName: 'Qa-en'
        packageForLinux: '$(Build.ArtifactStagingDirectory)/*.zip'

- stage: DeployProd
  dependsOn: Build
  displayName: Deploy Prod
  jobs:
  - job: 
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'New-resource-connection'
        appType: 'webApp'
        WebAppName: 'Prod-en'
        packageForLinux: '$(Build.ArtifactStagingDirectory)/*.zip'

